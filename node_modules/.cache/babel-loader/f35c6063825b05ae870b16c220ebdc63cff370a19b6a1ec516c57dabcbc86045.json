{"ast":null,"code":"var _jsxFileName = \"/Users/boky/Desktop/codeit/98_weeklymission/4-Weekly-Mission/src/components/main/Main.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getData } from \"../../utils/getData\";\nimport \"../../landing.css\";\nimport CardWrap from \"./CardWrap\";\nimport MainProfileWrap from \"./MainProfileWrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    myName: null,\n    myFolderName: null,\n    myProfileImg: null,\n    folders: []\n  });\n  const [myName, setMyName] = useState(null);\n  const [myFolderName, setMyForderName] = useState(null);\n  const [myProfileImg, setMyProfileImg] = useState(null);\n  const [folders, setFolders] = useState([]);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const data = await getData(`/api/sample/folder`);\n        const whoAmI = data.folder;\n        setMyName(whoAmI.owner.name);\n        setMyForderName(whoAmI.name);\n        setMyProfileImg(whoAmI.owner.profileImageSource);\n        setFolders(whoAmI.links);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainProfileWrap, {\n      myName: myName,\n      myFolderName: myFolderName,\n      myProfileImg: myProfileImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardWrap, {\n      folders: folders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Main, \"1XptdGG4r6ikfEtH4hLOO5vtpxE=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","getData","CardWrap","MainProfileWrap","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","userData","setUserData","myName","myFolderName","myProfileImg","folders","setMyName","setMyForderName","setMyProfileImg","setFolders","fetchUser","data","whoAmI","folder","owner","name","profileImageSource","links","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/boky/Desktop/codeit/98_weeklymission/4-Weekly-Mission/src/components/main/Main.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getData } from \"../../utils/getData\";\nimport \"../../landing.css\";\nimport CardWrap from \"./CardWrap\";\nimport MainProfileWrap from \"./MainProfileWrap\";\n\nconst Main = () => {\n  const [userData, setUserData] = useState({\n    myName: null,\n    myFolderName: null,\n    myProfileImg: null,\n    folders: [],\n  });\n\n  const [myName, setMyName] = useState(null);\n  const [myFolderName, setMyForderName] = useState(null);\n  const [myProfileImg, setMyProfileImg] = useState(null);\n  const [folders, setFolders] = useState([]);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const data = await getData(`/api/sample/folder`);\n        const whoAmI = data.folder;\n        setMyName(whoAmI.owner.name);\n        setMyForderName(whoAmI.name);\n        setMyProfileImg(whoAmI.owner.profileImageSource);\n        setFolders(whoAmI.links);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchUser();\n  }, []);\n\n  return (\n    <>\n      <MainProfileWrap\n        myName={myName}\n        myFolderName={myFolderName}\n        myProfileImg={myProfileImg}\n      />\n      <CardWrap folders={folders} />\n    </>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,OAAO,mBAAmB;AAC1B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACvCY,MAAM,EAAE,IAAI;IACZC,YAAY,EAAE,IAAI;IAClBC,YAAY,EAAE,IAAI;IAClBC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACH,MAAM,EAAEI,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACa,YAAY,EAAEI,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,YAAY,EAAEI,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,OAAO,EAAEI,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMpB,OAAO,CAAE,oBAAmB,CAAC;QAChD,MAAMqB,MAAM,GAAGD,IAAI,CAACE,MAAM;QAC1BP,SAAS,CAACM,MAAM,CAACE,KAAK,CAACC,IAAI,CAAC;QAC5BR,eAAe,CAACK,MAAM,CAACG,IAAI,CAAC;QAC5BP,eAAe,CAACI,MAAM,CAACE,KAAK,CAACE,kBAAkB,CAAC;QAChDP,UAAU,CAACG,MAAM,CAACK,KAAK,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA,CAACF,eAAe;MACdS,MAAM,EAAEA,MAAO;MACfC,YAAY,EAAEA,YAAa;MAC3BC,YAAY,EAAEA;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF7B,OAAA,CAACH,QAAQ;MAACa,OAAO,EAAEA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC9B,CAAC;AAEP,CAAC;AAACzB,EAAA,CAxCID,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}