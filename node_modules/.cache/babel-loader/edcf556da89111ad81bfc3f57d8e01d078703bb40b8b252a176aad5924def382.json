{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dngur\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uCF54\\uB529\\\\\\uC704\\uD074\\uB9AC\\uACFC\\uC81C\\\\\\uACFC\\uC81C\\uC81C\\uCD9C\\\\4-Weekly-Mission-part2-\\uBC15\\uC6B0\\uD601\\\\src\\\\pages\\\\Folder.js\",\n  _s = $RefreshSig$();\nimport Footer from \"components/FolderPage/Footer/Footer\";\nimport Header from \"components/FolderPage/Header/Header\";\nimport Main from \"components/FolderPage/Main/Main\";\nimport Nav from \"components/FolderPage/Nav/Nav\";\nimport { GetUserFolder, GetLinks } from \"api/GetUserFolder\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Folder() {\n  _s();\n  const [search, setSerch] = useState(\"\");\n  const [folderListInfo, setFolderListInfo] = useState([]);\n  const [selectedName, setSelectedName] = useState(\"전체\");\n  const [selectedId, setSelectedId] = useState(null);\n  const [links, setLinks] = useState([]);\n  const handleSearchChange = e => {\n    setSerch(e.target.value);\n  };\n  const handleSelectedFolder = ({\n    name,\n    id\n  }) => {\n    setSelectedId(id);\n    setSelectedName(name);\n  };\n  const loadFolderListInfo = async info => {\n    try {\n      const folders = await GetUserFolder(info);\n      setFolderListInfo(folders.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const loadLinks = async info => {\n    try {\n      const links = await GetLinks(info);\n      setLinks(links.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    loadFolderListInfo({\n      userId: 1\n    });\n    loadLinks({\n      userId: 1,\n      folderId: selectedId\n    });\n  }, [selectedId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      search: search,\n      folderListInfo: folderListInfo,\n      selectedId: selectedId,\n      selectedName: selectedName,\n      links: links,\n      onSelectedFolder: handleSelectedFolder,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Folder, \"yZyeDKtu+T9d1o8wjy26LHrk7AI=\");\n_c = Folder;\nexport default Folder;\nvar _c;\n$RefreshReg$(_c, \"Folder\");","map":{"version":3,"names":["Footer","Header","Main","Nav","GetUserFolder","GetLinks","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Folder","_s","search","setSerch","folderListInfo","setFolderListInfo","selectedName","setSelectedName","selectedId","setSelectedId","links","setLinks","handleSearchChange","e","target","value","handleSelectedFolder","name","id","loadFolderListInfo","info","folders","data","error","console","log","loadLinks","userId","folderId","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectedFolder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/dngur/OneDrive/바탕 화면/코딩/위클리과제/과제제출/4-Weekly-Mission-part2-박우혁/src/pages/Folder.js"],"sourcesContent":["import Footer from \"components/FolderPage/Footer/Footer\";\r\nimport Header from \"components/FolderPage/Header/Header\";\r\nimport Main from \"components/FolderPage/Main/Main\";\r\nimport Nav from \"components/FolderPage/Nav/Nav\";\r\nimport { GetUserFolder, GetLinks } from \"api/GetUserFolder\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Folder() {\r\n  const [search, setSerch] = useState(\"\");\r\n  const [folderListInfo, setFolderListInfo] = useState([]);\r\n  const [selectedName, setSelectedName] = useState(\"전체\");\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [links, setLinks] = useState([]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSerch(e.target.value);\r\n  };\r\n\r\n  const handleSelectedFolder = ({ name, id }) => {\r\n    setSelectedId(id);\r\n    setSelectedName(name);\r\n  };\r\n\r\n  const loadFolderListInfo = async (info) => {\r\n    try {\r\n      const folders = await GetUserFolder(info);\r\n      setFolderListInfo(folders.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadLinks = async (info) => {\r\n    try {\r\n      const links = await GetLinks(info);\r\n      setLinks(links.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFolderListInfo({ userId: 1 });\r\n    loadLinks({ userId: 1, folderId: selectedId });\r\n  }, [selectedId]);\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <Header />\r\n      <Main\r\n        search={search}\r\n        folderListInfo={folderListInfo}\r\n        selectedId={selectedId}\r\n        selectedName={selectedName}\r\n        links={links}\r\n        onSelectedFolder={handleSelectedFolder}\r\n        onChange={handleSearchChange}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Folder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}