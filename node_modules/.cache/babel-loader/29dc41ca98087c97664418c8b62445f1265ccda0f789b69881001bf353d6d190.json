{"ast":null,"code":"function formatDate(createdAt) {\n  const date = new Date(createdAt);\n  return `${date.getFullYear()}. ${date.getMonth() + 1}. ${date.getDate()}`;\n}\nfunction getTimeAgo(createdAt) {\n  const date = new Date(createdAt);\n  const currentDate = new Date();\n  const diffDate = currentDate.getTime() - date.getTime();\n  const minutes = Math.floor(diffDate / 1000 / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  const months = Math.floor(days / 30);\n  const years = Math.floor(months / 365);\n  if (minutes < 2) {\n    return \"1 minute ago\";\n  } else if (minutes < 60) {\n    return `${minutes} minutes ago`;\n  }\n  if (hours < 2) {\n    return \"1 hour age\";\n  } else if (hours < 24) {\n    return `${hours} hours ago`;\n  }\n  if (days < 2) {\n    return \"1 day ago\";\n  } else if (days < 31) {\n    return `${days} days ago`;\n  }\n  if (months < 2) {\n    return \"1 month age\";\n  } else if (months < 12) {\n    return `${months} months ago`;\n  }\n  if (years < 2) {\n    return \"1 year ago\";\n  } else {\n    return `${years} years ago`;\n  }\n}\nexport { getTimeAgo, formatDate };","map":{"version":3,"names":["formatDate","createdAt","date","Date","getFullYear","getMonth","getDate","getTimeAgo","currentDate","diffDate","getTime","minutes","Math","floor","hours","days","months","years"],"sources":["C:/Users/dngur/OneDrive/바탕 화면/코딩/위클리과제/weeklymission/src/util/time.js"],"sourcesContent":["function formatDate(createdAt) {\n  const date = new Date(createdAt);\n  return `${date.getFullYear()}. ${date.getMonth() + 1}. ${date.getDate()}`;\n}\n\nfunction getTimeAgo(createdAt) {\n  const date = new Date(createdAt);\n  const currentDate = new Date();\n\n  const diffDate = currentDate.getTime() - date.getTime();\n\n  const minutes = Math.floor(diffDate / 1000 / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  const months = Math.floor(days / 30);\n  const years = Math.floor(months / 365);\n\n  if (minutes < 2) {\n    return \"1 minute ago\";\n  } else if (minutes < 60) {\n    return `${minutes} minutes ago`;\n  }\n\n  if (hours < 2) {\n    return \"1 hour age\";\n  } else if (hours < 24) {\n    return `${hours} hours ago`;\n  }\n\n  if (days < 2) {\n    return \"1 day ago\";\n  } else if (days < 31) {\n    return `${days} days ago`;\n  }\n\n  if (months < 2) {\n    return \"1 month age\";\n  } else if (months < 12) {\n    return `${months} months ago`;\n  }\n\n  if (years < 2) {\n    return \"1 year ago\";\n  } else {\n    return `${years} years ago`;\n  }\n}\n\nexport { getTimeAgo, formatDate };\n"],"mappings":"AAAA,SAASA,UAAUA,CAACC,SAAS,EAAE;EAC7B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;EAChC,OAAQ,GAAEC,IAAI,CAACE,WAAW,CAAC,CAAE,KAAIF,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAE,KAAIH,IAAI,CAACI,OAAO,CAAC,CAAE,EAAC;AAC3E;AAEA,SAASC,UAAUA,CAACN,SAAS,EAAE;EAC7B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;EAChC,MAAMO,WAAW,GAAG,IAAIL,IAAI,CAAC,CAAC;EAE9B,MAAMM,QAAQ,GAAGD,WAAW,CAACE,OAAO,CAAC,CAAC,GAAGR,IAAI,CAACQ,OAAO,CAAC,CAAC;EAEvD,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACJ,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;EAChD,MAAMK,KAAK,GAAGF,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;EACtC,MAAMI,IAAI,GAAGH,IAAI,CAACC,KAAK,CAACC,KAAK,GAAG,EAAE,CAAC;EACnC,MAAME,MAAM,GAAGJ,IAAI,CAACC,KAAK,CAACE,IAAI,GAAG,EAAE,CAAC;EACpC,MAAME,KAAK,GAAGL,IAAI,CAACC,KAAK,CAACG,MAAM,GAAG,GAAG,CAAC;EAEtC,IAAIL,OAAO,GAAG,CAAC,EAAE;IACf,OAAO,cAAc;EACvB,CAAC,MAAM,IAAIA,OAAO,GAAG,EAAE,EAAE;IACvB,OAAQ,GAAEA,OAAQ,cAAa;EACjC;EAEA,IAAIG,KAAK,GAAG,CAAC,EAAE;IACb,OAAO,YAAY;EACrB,CAAC,MAAM,IAAIA,KAAK,GAAG,EAAE,EAAE;IACrB,OAAQ,GAAEA,KAAM,YAAW;EAC7B;EAEA,IAAIC,IAAI,GAAG,CAAC,EAAE;IACZ,OAAO,WAAW;EACpB,CAAC,MAAM,IAAIA,IAAI,GAAG,EAAE,EAAE;IACpB,OAAQ,GAAEA,IAAK,WAAU;EAC3B;EAEA,IAAIC,MAAM,GAAG,CAAC,EAAE;IACd,OAAO,aAAa;EACtB,CAAC,MAAM,IAAIA,MAAM,GAAG,EAAE,EAAE;IACtB,OAAQ,GAAEA,MAAO,aAAY;EAC/B;EAEA,IAAIC,KAAK,GAAG,CAAC,EAAE;IACb,OAAO,YAAY;EACrB,CAAC,MAAM;IACL,OAAQ,GAAEA,KAAM,YAAW;EAC7B;AACF;AAEA,SAASV,UAAU,EAAEP,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}